<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd">
<!--声明组件扫描器-->
    <context:component-scan base-package="com.ydd.controller"></context:component-scan>
<!--声明springmvc框架中的视图解析器，帮助开发人员设置试图文件的路径-->
<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
<!--    前缀：视图文件的路径-->
    <property name="prefix" value="/WEB-INF/view/" />
<!--    后缀:视图文件的扩展名-->
<property name="suffix" value=".jsp"/>

</bean>
<!--第二种处理静态资源的方式-项目中常用
mvc:resource加入后框架会创建ResourceHttpRequestHandler这个处理器对象。
嚷着对象处理静态资源的访问，不依赖tomcat服务器
mapping：访问静态资源的URI地址，使用通配符“**”
location:静态资源在你的项目中的目录位置
images/** 表示images下面的任何文件
location="/images/"   :   第一个“/”webapp根  第二个“/”表示images是一个目录
-->
    <mvc:resources mapping="images/**" location="/images/"/>
    <mvc:resources mapping="html/**" location="/html/"/>
<!--  <mvc:resources>和ResquestMapping有冲突，需要添加注解驱动  -->
    <mvc:annotation-driven/>
</beans>