<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-config.dtd">

<!--
mybatis的主配置文件：主要定义了数据库的配置信息，sql映射文件的位置、

-->
<!--根标签，表示这是mybatis的配置信息-->
<configuration>
    <!--    控制mybatis全局行为-->
    <settings>
        <setting name="logImpl" value="STDOUT_LOGGING"/>
    </settings>
    <!--default:必须和某个enviroment的id值一样。告诉mybatis要访问哪个数据库-->
    <environments default="mydev">
        <!--    一个数据库信息的配置，环境
id是与i个唯一值，自定义，表示环境的名称-->
        <environment id="mydev">
            <!--            transactionManager:mybatis的事务类型
                type="JDBC" 表示使用jdbc中的connection对象的commit，rollback做事务处理
-->
            <transactionManager type="JDBC"/>
            <!--            dataSource表示数据源，连接数据库的
                type表示数据源的类型，POOLED表示使用连接池
-->
            <dataSource type="POOLED">
                <!--
                driver，user，usrname，passward是固定的，不能自定义
-->
                <!--                数据库的驱动类名-->
                <property name="driver" value="com.mysql.cj.jdbc.Driver"/>
                <!--                连接数据库的url字符串-->
                <property name="url" value="jdbc:mysql://localhost:3306/springdb"/>
                <!--                -->
                <property name="username" value="root"/>
                <property name="password" value="123456"/>
            </dataSource>
        </environment>
    </environments>
    <!--        sql mapper（sql映射文件的位置）-->
    <mappers>
        <!--        一个mapper标签指定一个文件的位置：从类路径开始的路径信息
            类路径：target/classess（类路径）
            1、使用相对于类路径的资源引用
            2、使用完全限定资源定位符（URL）
            3、使用映射器接口实现类的完全限定类名
            4、将包内的映射器接口实现全部注册为映射器 <package name="org.mybatis.builder"/>
-->
        <mapper resource="com/ydd/dao/StudentDao.xml"/>
    </mappers>
</configuration>